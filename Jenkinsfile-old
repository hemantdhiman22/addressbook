pipeline{
    //Directives
    agent any
    tools {
        maven 'maven'
    }

    environment {
        ArtifactId = readMavenPom().getArtifactId()
        GroupId = readMavenPom().getGroupId()
        Version = readMavenPom().getVersion()
    }
    stages {
        // Specify various stage with in stages

        // stage 1. Build
        stage ('Build'){
            steps {
                sh 'mvn clean install package'
            }
        }

        // Stage2 : deregister targets form target group AWS
        stage ('deregister targets'){
            steps {
                sshPublisher(publishers: 
                [sshPublisherDesc(
                    configName: 'ansible-server', 
                    transfers: [
                        sshTransfer(
                            cleanRemote: false, 
                            execCommand: 'ansible-playbook  /home/admin/ansible/playbooks/target-deregistration.yml -i /home/admin/ansible/inventory', 
                            execTimeout: 120000, 
                        )
                    ], 
                    usePromotionTimestamp: false, 
                    useWorkspaceInPromotion: false, 
                    verbose: true)
                    ]
                )
            }
        }

         // Stage3 : artifacts to nexus
        stage ('publish to nexus'){
            steps {
                script{
                
                def NexusRepo = Version.endsWith("SNAPSHOT") ? "addressbook-SNAPSHOT" : "addressbook-RELEASE"

                nexusArtifactUploader artifacts: 
                [[artifactId: "${ArtifactId}", 
                classifier: '', 
                file: 'target/addressbook.war', 
                type: 'war']], 
                credentialsId: '2', 
                groupId: "${GroupId}",
                nexusUrl: '10.0.151.68:8081', 
                nexusVersion: 'nexus3', 
                protocol: 'http', 
                repository: "${NexusRepo}",
                version: "${Version}"
                }
            }
        }

        // Stage4 : deploying
        stage ('deploying'){
            steps {
                sshPublisher(publishers: 
                [sshPublisherDesc(
                    configName: 'ansible-server', 
                    transfers: [
                        sshTransfer(
                            cleanRemote: false, 
                            execCommand: 'ansible-playbook  /home/admin/ansible/playbooks/download-artifacts.yml -i /home/admin/ansible/inventory', 
                            execTimeout: 120000, 
                        )
                    ], 
                    usePromotionTimestamp: false, 
                    useWorkspaceInPromotion: false, 
                    verbose: true)
                    ]
                )
            }
        }

        // Stage5 : register targets form target group AWS
        stage ('register targets'){
            steps {
                sshPublisher(publishers: 
                [sshPublisherDesc(
                    configName: 'ansible-server', 
                    transfers: [
                        sshTransfer(
                            cleanRemote: false, 
                            execCommand: 'ansible-playbook  /home/admin/ansible/playbooks/target-registration.yml -i /home/admin/ansible/inventory', 
                            execTimeout: 120000, 
                        )
                    ], 
                    usePromotionTimestamp: false, 
                    useWorkspaceInPromotion: false, 
                    verbose: true)
                    ]
                )
            }
        }
        
    }
}
